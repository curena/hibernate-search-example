plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'groovy'
	id 'idea'
}

group = 'contrast.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
def springVersion = "5.2.8.RELEASE"
def hibernateVersion = "5.4.21.Final"
def hibernateSearchVersion = "5.11.5.Final"
def springDataVersion = "2.3.3.RELEASE"

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework:spring-orm:${springVersion}"
	implementation "org.hibernate:hibernate-core:${hibernateVersion}"
	implementation "org.hibernate:hibernate-search-orm:${hibernateSearchVersion}"
	implementation "org.springframework.data:spring-data-jpa:${springDataVersion}"
	implementation "org.springframework.data:spring-data-commons:${springDataVersion}"
	implementation 'com.h2database:h2:1.4.196'
	implementation 'com.google.guava:guava:23.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testCompile 'org.spockframework:spock-spring:1.3-groovy-2.5'
	testCompile 'org.codehaus.groovy:groovy-all:2.5.11'
	testCompile 'com.github.javafaker:javafaker:0.15'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

sourceSets {
	test {
		java.srcDir file('src/test/groovy')
		resources.srcDir('src/test/resources')
	}
	integrationTest {
		java.srcDir file('src/integrationTest/groovy')
		resources.srcDir file('src/integrationTest/resources')
		compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
		runtimeClasspath += output + compileClasspath
	}
}